{"version":3,"sources":["images/self.jpg","components/FormatContainer.js","components/DropdownSection.js","home.js","components/Nav.js","components/ActionContainer.js","pages/MainPage.js","pages/Gallery.js","pages/NoPage.js","components/MapLayers.js","components/LevelSlider.js","components/BufferedLayer.js","components/BaseMap.js","components/MapComponent.js","pages/Map.js","scripts/navScroll.js","scripts/iconHover.js","App.js","reportWebVitals.js","index.js","images/back1.JPG","images/back2.jpg"],"names":["module","exports","FormatContainer","_ref","columns","spacing","elements","React","createElement","className","style","gridTemplateColumns","gridGap","Children","toArray","map","element","key","defaultProps","count","DropdownSection","props","display","setDisplay","useState","onClick","name","children","home","homeElements","src","alt","softwareElements","href","experienceElements","projectsElementsOld","title","frameborder","allow","allowfullscreen","icons","icon","text","linkTo","Nav","linksList","link","includes","HashLink","to","Link","target","rel","TbDeer","size","label","FaCow","FaFilm","ActionContainer","cols","setCols","useEffect","length","repeat","console","log","index","ActionItem","_ref2","ref","inView","useInView","triggerOnce","threshold","delay","setDelay","window","matchMedia","matches","transitionDelay","MainPage","id","backgroundImage","backImage","backImage2","projectsElements","Gallery","files","array","i","j","Math","floor","random","temp","shuffleArray","images","push","file","NoPage","navigate","useNavigate","example","useParams","MapLayers","layers","selectedDetails","setSelectedDetails","selectedCoordinates","setSelectedCoordinates","infoOverlay","Overlay","document","positioning","stopEvent","addOverlay","vectorLayers","forEach","geojson","vectorSource","VectorSource","url","filename","format","GeoJSON","vectorLayer","VectorLayer","source","opacity","zIndex","addLayer","layer","extent","getSource","getExtent","once","getView","fit","padding","selectInteraction","Select","condition","click","on","event","feature","selected","get","coordinates","getGeometry","getCoordinates","toLonLat","setPosition","undefined","addInteraction","removeInteraction","removeLayer","removeOverlay","Fragment","position","top","right","background","borderRadius","boxShadow","fontSize","fontWeight","toFixed","LevelSlider","min","max","step","initialValue","onChange","sliderValue","setSliderValue","textAlign","htmlFor","type","value","handleButtonClick","Number","BufferedLayer","setVectorSource","baseSource","setBaseSource","getState","features","getFeatures","addFeatures","bottom","left","distance","_buffered$geometry","_bufferedCoordinates$","coord","JSON","stringify","turfPolygon","polygon","buffered","buffer","units","joing","bufferedCoordinates","geometry","warn","bufferedFeature","readFeature","dataProjection","featureProjection","clear","addFeature","bufferLayer","Style","fill","Fill","color","stroke","Stroke","width","jsonLayers","image","CircleStyle","radius","RegularShape","points","angle","BaseMap","setMap","olMap","Map","TileLayer","OSM","view","View","center","zoom","controls","setTarget","height","MapComponent","mobileScreen","pos","navScroll","e","scrollPos","scrollY","getElementById","nav","info","screen","offsetTop","setInterval","clearInterval","iconHover","infoDiv","hovering","addEventListener","classList","remove","add","App","location","useLocation","AiTwotoneInfoCircle","Routes","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.8179d52c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/self.d9e99e4a.jpg\";","import React from 'react';\r\nimport '../styles/FormatContainer.css';\r\n\r\nconst FormatContainer = ({ columns,spacing,elements }) => {\r\n  return (\r\n    <div className=\"wrapper\" style={{ gridTemplateColumns: columns, gridGap: spacing}}>\r\n        \r\n      {\r\n        React.Children.toArray(\r\n          elements.map(\r\n            (element) => (\r\n                <div key={element.key}>{element}</div>\r\n            )\r\n        )\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nFormatContainer.defaultProps = {\r\n\r\n    spacing: '1em',\r\n    columns: '1fr 1fr',\r\n    count: 2,\r\n    elements: []\r\n\r\n}\r\n\r\nexport default FormatContainer","import React from \"react\";\nimport { useState } from \"react\";\nimport '../styles/DropdownSection.css';\n\nconst DropdownSection = ( props ) => {\n\n    const [ display, setDisplay ] = useState( 'none' );\n\n    function handleClick() {\n        \n        if ( display == 'none' ) {\n            setDisplay( 'block' );\n        } else {\n            setDisplay( 'none' );\n        }\n    }\n\n    return (\n\n        <div className=\"dropdownAll\">\n\n            <div className=\"dropdownHeader\" onClick={handleClick}>\n\n                <h2>{props.name}</h2>\n\n            </div>\n\n            <div className=\"dropdownBody\" style={{display:display}}>\n                {props.children}\n            </div>\n\n        </div>\n    \n    )\n}\n\nDropdownSection.defaultProps = {\n    name: \"Click to see more\"\n}\n\nexport default DropdownSection","import React, { Component } from 'react';\r\n\r\n// List of elements to be rendered on the home page\r\n// Serves as a single location to store text & other information that will be used by the site - essentially a makeshift static database in concept\r\nconst home = {\r\n\r\n    homeElements: [\r\n    \r\n        <div key={1}>\r\n            <p>\r\n                I'm a graduate student at Toronto Metropolitan University in the Master of Spatial Analysis program. \r\n                With a High Honours Undergraduate degree in Computer Science from the University of Guelph I am a strong programmer \r\n                with a background in python, C, and Javascript programming, having worked in computer vision and as a small-scale web developer. \r\n                <br /><br />\r\n                I'm a passionate about the outdoors and the environment, having worked as an outdoor educator and canoe camping guide. \r\n                I've worked with the Toronto and Region Conservation Authority (TRCA) and Ducks Unlimited Canada in their conservation efforts in Southern Ontario.  \r\n                My current research addresses salt vulnerability in urban watersheds and aims to use GIS and spatial analysis technology to identify \r\n                salt-vulnerable-vulnerable areas in the Greater Toronto Area.\r\n                <br /><br />\r\n                As a visual arist I have worked as a composer and cinematographer on independent film projects \r\n                including an upcoming feature film, some of which are showcased here.\r\n                Some of my photography and digital art is viewable on this website in a reduced-resolution format.\r\n            </p>\r\n        </div>\r\n        ,\r\n        <div key={2}>\r\n            <img src='/media/self.jpg' alt='' className='imageDefault' />\r\n        </div>\r\n    \r\n    ], softwareElements: [\r\n\r\n        <div key={2}>\r\n            <h3><a href=\"https://csl.uwaterloo.ca/\">Collaborative Systems Laboratory</a></h3>\r\n            <img src=\"/media/58.jpg\" className='imageDefault' alt='' key={4} />\r\n            <p>\r\n                As an Undergraduate Research Assistant, I explored recent literature in Precision Livestock Farming \r\n                with specific regard to computer vision and remote sensing techniques for automatic detection of cattle \r\n                on pastures and in feedlots. My research led to the independent development of software that could detect \r\n                the presence of cattle in watering pens after training on a labeled dataset. The script used PyTorch and \r\n                OpenCV to parse video files and automatically create sub-clips and output labels in a format that could \r\n                then be used to further train the model. I worked closely with the Resnet, YOLO, and Mask-R-CNN computer vision models.\r\n            </p>\r\n        </div>\r\n        ,\r\n        \r\n        // <div key={3}>\r\n        //     <h3>Web</h3>\r\n        //     <img src=\"/media/react-cover.png\" className='imageDefault' alt='' key={4} />\r\n        //     <p>\r\n        //         I've worked on numerous web applications with a variety of different tools. As an excercise using basic tools I built a website on HTML & JQuery \r\n        //         that could interface with a C program & a backend using MariaDB.\r\n        //         <br />\r\n        //         <br />\r\n        //         Using Python, Flask, & React, I worked in a small team to build a web utility that can search, & view UoGuelph & Carelton courses & their prerequisites \r\n        //         by bachelor program, major, minor, etc. with a detailed graphing functionality using <a href=\"https://reactflow.dev/\" style={{textDecoration: 'underline'}}>React Flow</a>.\r\n        //     </p>\r\n        // </div>\r\n        // ,\r\n\r\n    ],\r\n    experienceElements: [\r\n        <img src=\"/media/tripcentre.JPG\" className='imageDefault' alt='' key={2} />\r\n    ,\r\n        <div key={1}>\r\n            <a href='https://www.kandalore.com/'><h3>Camp Kandalore</h3></a>\r\n            <p>At Kandalore, where I worked in the summers of 2019 and 2021, my main role was guiding canoe trips\r\n                with groups of up to 10 campers lasting from 3 to 7 days in length. The main focus on these trips was\r\n                creating a welcoming and educational environment where campers could learn and grow.\r\n                <br />\r\n                <br />\r\n                In the summer of 2021 I ran a 7 day trip down the spanish river, navigating long lakes, portages, and whitewater sets.\r\n                <br />\r\n                <br />\r\n                Meanwhile in camp, I had an actve role in organizing the trip centre, where all our trip gear/maps/etc.\r\n                was kept, as well as fixing boats before and after they were on trips. </p>\r\n        </div>\r\n        ,\r\n    \r\n    ],\r\n    projectsElementsOld: [\r\n        <div>\r\n            <h4>Composer - <a href=\"https://letterboxd.com/film/sole-of-a-salesman/\">'Sole of a Salesman' by Lliam Bittle</a></h4>\r\n            <iframe className=\"video\" src=\"https://www.youtube.com/embed/OOtX7AmzdAA\" title=\"Sole Of A Salesman\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n        </div>\r\n        ,\r\n        <p>Independent short film soundtrack, written and produced using a variety of digital instruments as well as recorded instruments.</p>\r\n        ,\r\n        <div>\r\n            <h4>Personal Project - 'some lines'</h4>\r\n            <iframe className=\"video\" src=\"https://www.youtube.com/embed/6oY2tPwBhj0\" title=\"some lines\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n        </div>\r\n        ,\r\n        <p>Hand drawn animation with original music. Created in Blender.</p>\r\n    ],\r\n    icons: [\r\n        {\r\n            icon: process.env.PUBLIC_URL + \"/media/github-logo.png\",\r\n            text: \"\",\r\n            linkTo: 'https://github.com/ga-holmes'\r\n        },\r\n        {\r\n            icon: process.env.PUBLIC_URL + \"/media/linkedin.png\",\r\n            text: \"\",\r\n            linkTo: \"https://www.linkedin.com/in/garrett-a-holmes/\"\r\n        },\r\n        {\r\n            icon: process.env.PUBLIC_URL + \"/media/resume.png\",\r\n            text: \"\",\r\n            linkTo: \"/media/GarrettHolmesResume.pdf\"\r\n        },\r\n        {\r\n            icon: \"\",\r\n            text: \"G A R R E T T _ H O L M E S\",\r\n            linkTo: \"/#start\"\r\n        },\r\n        {\r\n            icon: \"\",\r\n            text: \"gallery\",\r\n            linkTo: \"/gallery\"\r\n        },\r\n        {\r\n            icon: \"\",\r\n            text: \"map\",\r\n            linkTo: \"/map\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport default home;","import React from 'react'\r\nimport '../styles/Nav.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\n\r\nconst Nav = ({ linksList, style }) => {\r\n\r\n    return (\r\n        <div className=\"container\" style={style} >\r\n\r\n            {React.Children.toArray(\r\n                linksList.map(\r\n                    (link) => (\r\n                        link.icon === '' ? \r\n                            link.linkTo.includes(\"#\") ? <HashLink to={link.linkTo} className=\"noIcon\">{link.text}</HashLink> : <Link to={link.linkTo} className=\"noIcon\">{link.text}</Link>\r\n                        :\r\n                            <a className=\"hasIcon\" key={link.key} href={link.linkTo} target='_blank' rel='noreferrer'> <img className=\"icon\" src={link.icon} alt='' /> </a>\r\n                    )\r\n                )\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nNav.defaultProps = {\r\n\r\n    linksList: []\r\n\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport '../styles/ActionContainer.css';\r\n\r\n// icons imports\r\nimport { TbDeer } from \"react-icons/tb\";\r\nimport { FaCow } from \"react-icons/fa6\";\r\nimport { FaFilm } from \"react-icons/fa6\";\r\n\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst iconSize = 100;\r\n\r\nconst icons = [\r\n    { name: <TbDeer size={iconSize} />, label: 'Moose Habitat', link: 'https://geg.uoguelph.ca/sites/default/files/GEOG4480-W23_Group02.pdf', text: 'I worked in a small team and a Masters Candidate to build a model measuring moose habitat suitability in Ontario\\'s Missinaibi Forest using multi-criteria analysis and ArcGIS.' },\r\n    { name: <FaCow size={iconSize} />, label: 'Precision Livestock', link: 'https://github.com/ga-holmes/cows_drinking', text: 'I explored AI and computer vision applications in precision livestock agriculture with the Collaborative Systems Lab and designed software to support a then-ongoing research project monitoring drinking habits in dairy cows.' },\r\n    { name: <FaFilm size={iconSize} />, label: 'Independent Films', link: 'https://www.youtube.com/watch?v=6oY2tPwBhj0', text: 'I create indepenent films and music with friends and collaborate on a variety of creative projects.' },\r\n    // Add more icons as needed\r\n];\r\n\r\nconst ActionContainer = ({ columns, spacing }) => {\r\n    const [cols, setCols] = useState('');\r\n\r\n    useEffect(() => {\r\n        // override automatic columns with set columns if they are set\r\n        if (columns !== '') {\r\n            setCols(columns);\r\n        } else {\r\n            // maximum columns is 4, otherwise set to number of icons\r\n            if (icons.length > 4) {\r\n                setCols('1fr 1fr 1fr 1fr');\r\n            } else {\r\n                setCols(\"1fr \".repeat(icons.length));\r\n            }\r\n        }\r\n        console.log(cols);\r\n    }, [cols, columns, icons]);\r\n\r\n    return (\r\n        <div className=\"actionWrapper\" style={{ gridTemplateColumns: cols, gridGap: spacing }}>\r\n            {icons.map((icon, index) => (\r\n                <ActionItem key={index} icon={icon} index={index} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n// seperate component for each item so that we can pass the index of the icon into it from the list.map\r\n// this is for the mobile layout where the slide animation is triggered when the icon comes into view rather than when hovered over\r\nconst ActionItem = ({ icon, index }) => {\r\n\r\n    // trigger animation when in view for mobile\r\n    const { ref, inView } = useInView({\r\n        triggerOnce: true, // Trigger only once\r\n        threshold: 0.7, // Trigger when 10% of the element is in view\r\n    });\r\n\r\n    const [delay, setDelay] = useState('0s');\r\n    \r\n    useEffect(() => {\r\n        // only set delay for mobile device\r\n        const isMobile = window.matchMedia(\"max-device-width: 1024px\").matches;\r\n        if (isMobile) {\r\n            setDelay(`${index * 0.3}s`); // Delay each item by 0.2s times its index for mobile\r\n        }\r\n    }, [index]);\r\n\r\n    return (\r\n        <div ref={ref} className={`actionItem ${inView ? 'animate' : ''}`} style={{ transitionDelay: delay }} title={icon.label}>\r\n            <a href={icon.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <span className='actionLink'>\r\n                    <p className='actionLinkText'>L E A R N M O R E</p>\r\n                </span>\r\n            </a>\r\n            <span className=\"actionIcon\">{icon.name}</span>\r\n            <div className=\"backgroundSlide\">\r\n                <p className=\"textFade\">{icon.text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nActionContainer.defaultProps = {\r\n\r\n    spacing: '1em',\r\n    columns: '',\r\n    count: 2,\r\n    elements: []\r\n\r\n}\r\nexport default ActionContainer","\r\nimport React from 'react';\r\n\r\nimport backImage from \"../images/back1.JPG\"\r\nimport backImage2 from \"../images/back2.jpg\"\r\nimport backImage3 from \"../images/self.jpg\"\r\n\r\nimport FormatContainer from \"../components/FormatContainer\";\r\nimport DropdownSection from '../components/DropdownSection.js';\r\n\r\nimport \"../styles/MainPage.css\";\r\n\r\nimport home from \"../home.js\"\r\n\r\nimport Nav from '../components/Nav';\r\nimport ActionContainer from '../components/ActionContainer';\r\n\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <div className=\"topBanner\" id=\"start\" style={{ backgroundImage: `url(${backImage})` }}/>\r\n\r\n            <div id=\"icons\">\r\n                <Nav linksList={home.icons} style={{display: 'flex'}}/>\r\n            </div>\r\n\r\n\r\n            <div className=\"bck\" style={{ backgroundImage: `url(${backImage2})` }}>\r\n                <div className='content'>\r\n\r\n                    <FormatContainer elements={home.homeElements}/>\r\n\r\n                    <br/>\r\n\r\n                    <h1 className='sectionTitle'>P R O J E C T S</h1>\r\n                    \r\n                    <ActionContainer elements={home.projectsElements}/>\r\n\r\n\r\n                    {/* <DropdownSection name=\"Projects\">\r\n                        <FormatContainer elements={home.projectsElements}/>\r\n                    </DropdownSection> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage","import React from 'react';\nimport '../styles/Gallery.css';\n\nconst Gallery = () => {\n\n  // comment this when running on server (get file names dynamically), otherwise, add each file name (inside gallery) here manually\n  let files = [\"boi.png\",\n              \"cocabike.jpg\",\n              \"darkforest.jpg\",\n              \"dylansky.jpg\",\n              \"jaritos.JPG\",\n              \"lilhpuse.png\",\n              \"mountain.JPG\",\n              \"mountaintree.JPG\",\n              \"raodbike.jpg\",\n              \"spanish.jpg\",\n              \"spanish2.jpg\",\n              \"spanish3.jpg\",\n              \"toronto.jpg\",\n              \"back1.JPG\",\n              \"back2.jpg\",\n              \"beech.jpg\",\n              \"clouds.jpg\",\n              \"cotty.jpg\",\n              \"fall.jpg\",\n              \"sil.JPG\",\n              \"uke.jpg\",\n              \"waves.jpg\",\n              \"prater2.jpg\",\n              \"prater1.jpg\",\n              \"mountainaus.jpg\",\n              \"louise.JPG\",\n              \"grass.jpg\",\n              \"dam.jpg\",\n              \"beach.jpg\",\n              \"bars.jpg\"\n  ];\n\n  files = shuffleArray(files);\n\n  const images = [];\n\n  // generate gallery layout (2 images/one image)\n  let count = 0;\n  for (let i = 0; i < files.length; i++) {\n    if ((count - 1) % 3 === 0) {\n      images.push(\n        <div>\n          <img className=\"galleryimg\" src={process.env.PUBLIC_URL+\"/media/gallery/\" + files[i]} alt=\"\"></img>\n        </div>\n      )\n    } else {\n      images.push(\n        <div>\n          <img className=\"galleryimg\" src={process.env.PUBLIC_URL + \"/media/gallery/\" + files[i]} alt=\"\"></img>\n          <img className=\"galleryimg\" src={process.env.PUBLIC_URL + \"/media/gallery/\" + files[i + 1]} alt=\"\"></img>\n        </div>\n      )\n      i++;\n    }\n    count++;\n  }\n\n  return (\n    <div>\n      <div className=\"gwrapper\">\n        {React.Children.toArray(\n          images.map(\n            (file) => (\n              file\n            )\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n\n// Gallery.defaultProps = {\n\n//   files: []\n\n// }\n\n\n// from: https://www.geeksforgeeks.org/how-to-shuffle-an-array-using-javascript/\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n  \n      // Generate random number\n      var j = Math.floor(Math.random() * (i + 1));\n                  \n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n      \n  return array;\n}\n\nexport default Gallery;","import React from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst NoPage = () => {\r\n\r\n    let navigate = useNavigate();\r\n    let {example} = useParams();\r\n\r\n  return (\r\n    <div>\r\n        404: Page {example}not found\r\n        <button onClick={ () => { navigate(\"/\"); } }>Go Back</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoPage","import React, { useEffect, useState } from 'react'\r\n\r\n// Import the necessary components from OpenLayers\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport {Select} from'ol/interaction.js'\r\nimport { click } from 'ol/events/condition';\r\nimport Overlay from 'ol/Overlay';\r\nimport { toLonLat } from 'ol/proj';\r\n\r\nfunction MapLayers({layers, map}) {\r\n\r\n    const [selectedDetails, setSelectedDetails] = useState('')\r\n    const [selectedCoordinates, setSelectedCoordinates] = useState(null); // Store coordinates of the selected feature\r\n\r\n    // Use effect will make sure that the map is continuously rendered every time it changes\r\n    useEffect(() => {\r\n        // Error checking\r\n        if (!map || !layers || layers.length === 0) return;\r\n\r\n        // Create the overlay for displaying the selected feature's name\r\n        const infoOverlay = new Overlay({\r\n            element: document.createElement('div'),\r\n            positioning: 'center-center', // Position it at the bottom center of the selected feature\r\n            stopEvent: true, // Prevent map events from being blocked by the overlay\r\n        });\r\n\r\n        map.addOverlay(infoOverlay); // Add overlay to the map\r\n\r\n        const vectorLayers = []\r\n\r\n        // Create a layer for each geojson and add it to the map\r\n        layers.forEach((geojson) => {\r\n\r\n            const vectorSource = new VectorSource({\r\n                url: geojson.filename,\r\n                format: new GeoJSON()\r\n            })\r\n\r\n            const vectorLayer = new VectorLayer({\r\n                source: vectorSource,\r\n                opacity: 1,\r\n                zIndex: geojson.zIndex ? geojson.zIndex : 2,\r\n                style: geojson.style\r\n            })\r\n\r\n            vectorLayers.push(vectorLayer);\r\n            map.addLayer(vectorLayer);\r\n\r\n        });\r\n\r\n        // Get the source of the layer with the largest extent\r\n        let source = null;\r\n\r\n        vectorLayers.forEach(layer => {\r\n            const extent = layer.getSource().getExtent();\r\n\r\n            if (source == null){\r\n                source = layer.getSource()\r\n            } else if (source.getExtent() < extent){\r\n                source = layer.getSource()\r\n            }\r\n\r\n        });\r\n\r\n        // Change the extent to the largest one\r\n        source.once('addfeature', () => {\r\n            // Get the extent of the vector layer once features are loaded\r\n            const extent = source.getExtent();\r\n            map.getView().fit(extent, { padding: [100, 100, 100, 100] });\r\n        });\r\n\r\n        // Set up the Select interaction\r\n        const selectInteraction = new Select({\r\n            condition: click,\r\n            layers: vectorLayers,\r\n        });\r\n\r\n        selectInteraction.on('select', (event) => {\r\n            const feature = event.selected[0]; // Get the first selected feature\r\n            \r\n            if (feature) {\r\n                const name = feature.get('Name'); // Extract the \"Name\" attribute\r\n                const geometry = feature.getGeometry(); // Get the geometry of the feature\r\n                const coordinates = geometry.getCoordinates(); // Get the coordinates of the feature's geometry\r\n\r\n                // Set the name and coordinates for positioning the overlay\r\n                setSelectedDetails(name);\r\n                setSelectedCoordinates(toLonLat(coordinates)); // Convert to EPSG:4326\r\n                // Position the overlay at the coordinates of the selected feature\r\n                infoOverlay.setPosition(toLonLat(coordinates)); // Set position of overlay on the map\r\n            } else {\r\n                setSelectedDetails(null); // Reset if no feature is selected\r\n                setSelectedCoordinates(null);\r\n                infoOverlay.setPosition(undefined); // Hide the overlay if no selection\r\n            }\r\n        });\r\n\r\n        map.addInteraction(selectInteraction);\r\n\r\n        return () => {\r\n            map.removeInteraction(selectInteraction);\r\n            layers.forEach((layer) => map.removeLayer(layer)); // Cleanup on unmount\r\n            map.removeOverlay(infoOverlay);\r\n        };\r\n        \r\n    }, [map, layers]);\r\n\r\n    return (\r\n        <>\r\n            {selectedDetails && selectedCoordinates && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: '40px',   // Position it just below the selected feature's coordinates\r\n                        right: '40px',\r\n                        background: 'rgba(255, 255, 255, 0.8)',\r\n                        padding: '10px',\r\n                        borderRadius: '5px',\r\n                        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                        zIndex: 1000,        // Ensure it appears above the map\r\n                        fontSize: '12px',\r\n                        fontWeight: 'bold',\r\n                    }}\r\n                >\r\n                    <h1>{selectedDetails}</h1>\r\n                    <p>{\"Longitude: \"}{selectedCoordinates[0].toFixed(6)}</p>\r\n                    <p>{\"Latitude: \"}{selectedCoordinates[1].toFixed(6)}</p>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MapLayers","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction LevelSlider({ min, max, step, initialValue, onChange }) {\r\n\r\n    const [sliderValue, setSliderValue] = useState(initialValue)\r\n    const tanSlope = 0.17\r\n    \r\n    const handleSliderChange = (event) => {\r\n        setSliderValue(event.target.value); // Update internal slider value\r\n    };\r\n\r\n\r\n    // Only send the value on button click to prevent performance issues\r\n    const handleButtonClick = () => {\r\n        onChange(Number(sliderValue) / tanSlope); // Send value to parent on button click\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '10px', textAlign: 'center' }}>\r\n            <label htmlFor=\"buffer-slider\">Water Level (meters): </label>\r\n            <input\r\n                id=\"buffer-slider\"\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n                value={sliderValue}\r\n                onChange={handleSliderChange}\r\n            />\r\n            <span>{sliderValue}m</span>\r\n            <span>{'\\t'}</span>\r\n            <button onClick={handleButtonClick}>Apply Water Level Change</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nLevelSlider.defaultProps = {\r\n    min: 0,\r\n    max: 1000,\r\n    step: 10,\r\n    initialValue: 10\r\n}\r\n\r\nexport default LevelSlider","import React, { useEffect, useState } from 'react'\r\n\r\n// Import the necessary components from OpenLayers\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport { toLonLat } from 'ol/proj'\r\n\r\nimport LevelSlider from './LevelSlider'\r\n\r\n// turf.js\r\nimport { buffer, polygon } from '@turf/turf'\r\n\r\nfunction BufferedLayer({ map, layer, zIndex }) {\r\n\r\n    // This source is only used to display the buffered vector\r\n    const [vectorSource, setVectorSource] = useState(null); // Store the vector source\r\n    // Keep track of the original geometry to apply the buffer to\r\n    const [baseSource, setBaseSource] = useState(null)\r\n\r\n    // Use effect will make sure that the map is continuously rendered every time it changes\r\n    useEffect(() => {\r\n\r\n        if (!map) return;\r\n\r\n        const vectorSource = new VectorSource({\r\n            url: layer.filename,\r\n            format: new GeoJSON()\r\n        });\r\n\r\n        const baseSource = new VectorSource();\r\n\r\n        const vectorLayer = new VectorLayer({\r\n            source: vectorSource,\r\n            opacity: 1,\r\n            zIndex: zIndex,\r\n            style: layer.style\r\n        });\r\n\r\n        // Store the vector source instance and add it to the map\r\n        map.addLayer(vectorLayer)\r\n\r\n        // Once vectorSource has finished loading, copy its features to baseSource to maintain independence from vectorSource\r\n        vectorSource.once('change', () => {\r\n            if (vectorSource.getState() === 'ready') {\r\n                // Get all features from vectorSource and add them to baseSource\r\n                const features = vectorSource.getFeatures();\r\n                baseSource.addFeatures(features);\r\n\r\n                setBaseSource(baseSource);\r\n            }\r\n        });\r\n\r\n        setVectorSource(vectorSource);\r\n\r\n        return () => {\r\n            map.removeLayer(vectorLayer); // Cleanup on unmount\r\n        };\r\n\r\n    }, [map, layer, zIndex]);\r\n\r\n    // Function to handle buffer updates from the slider\r\n    const handleBufferChange = (distance) => {\r\n\r\n        if (!vectorSource || !baseSource) return;\r\n\r\n        const features = baseSource.getFeatures();\r\n        if (features.length === 0) return;\r\n\r\n        // Get geometry from the first feature\r\n        const originalGeometry = features[0].getGeometry();\r\n        const coordinates = originalGeometry.getCoordinates()[0].map((coord) => toLonLat(coord));\r\n\r\n        // Ensure the polygon is closed\r\n        if (\r\n            JSON.stringify(coordinates[0]) !==\r\n            JSON.stringify(coordinates[coordinates.length - 1])\r\n        ) {\r\n            coordinates.push(coordinates[0]); // Close the ring\r\n        }\r\n\r\n        // Create a Turf.js polygon and buffer it\r\n        const turfPolygon = polygon([coordinates]);\r\n        const buffered = buffer(turfPolygon, distance, { units: 'meters', joing: 'miter' });\r\n\r\n        // **Validation Step**: Check if the buffer resulted in a valid polygon\r\n        const bufferedCoordinates = buffered?.geometry?.coordinates;\r\n\r\n        if (bufferedCoordinates && bufferedCoordinates[0]?.length < 4) {\r\n            console.warn('Buffer operation resulted in an invalid polygon.');\r\n        }\r\n\r\n        // Convert the buffered GeoJSON back to EPSG:3857 (for the map)\r\n        const bufferedFeature = new GeoJSON().readFeature(buffered, {\r\n            dataProjection: 'EPSG:4326',\r\n            featureProjection: 'EPSG:3857',\r\n        });\r\n\r\n        // Clear the vector source and add the buffered feature\r\n        vectorSource.clear();\r\n        vectorSource.addFeature(bufferedFeature);\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            position: 'absolute',\r\n            bottom: '10px', // Position it 10px from the bottom of the map\r\n            left: '10px',  // Position it 10px from the right of the map\r\n            background: 'rgba(255, 255, 255, 0.8)', // Opaque background\r\n            padding: '10px',\r\n            borderRadius: '5px', // Rounded corners\r\n            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', // Optional shadow for better visibility\r\n            zIndex: 1000, // Ensure it appears above the map\r\n        }\r\n}>\r\n            <LevelSlider min={-0.9} max={3.2} initialValue={-0.9} step={0.1} onChange={handleBufferChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nBufferedLayer.defaultProps = {\r\n    zIndex: 2\r\n}\r\n\r\nexport default BufferedLayer","import React, { useEffect, useState } from 'react'\r\n\r\n// Import the necessary components from OpenLayers\r\nimport { Map, View } from 'ol'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport { OSM } from 'ol/source'\r\nimport { Circle as CircleStyle, Fill, Stroke, Style, RegularShape } from 'ol/style.js';\r\n\r\nimport MapLayers from './MapLayers'\r\nimport BufferedLayer from './BufferedLayer'\r\n\r\nconst bufferLayer = {\r\n    filename: \"layers/MadawaskaRiver.geojson\",\r\n    style: new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(42, 183, 255, 0.3)',\r\n        }),\r\n        stroke: new Stroke({\r\n            color: 'rgb(42, 183, 255)',\r\n            width: 2\r\n        })\r\n    })\r\n}\r\n\r\nconst jsonLayers = [\r\n    {\r\n        filename: \"layers/AccessPoints.geojson\",\r\n        style: new Style({\r\n            image: new CircleStyle({\r\n                radius: 8,\r\n                fill: new Fill({\r\n                    color: 'rgba(207, 232, 17, 0.431)'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: 'rgba(250, 249, 14, 0.988)',\r\n                    width: 1\r\n                })\r\n            })\r\n        }),\r\n        zIndex: 4\r\n    },\r\n    {\r\n        filename: \"layers/Campsites.geojson\",\r\n        style: new Style({\r\n            image: new RegularShape({\r\n                fill: new Fill({\r\n                    color: 'rgba(0, 255, 119, 0.5)'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: 'rgba(6, 140, 69, 0.922)',\r\n                    width: 1\r\n                }),\r\n                points: 3,\r\n                radius: 10,\r\n                angle: 0,\r\n            })\r\n        }),\r\n        zIndex: 3\r\n    },\r\n    {\r\n        filename: \"layers/MadRapids.geojson\",\r\n        style: new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255, 82, 84)',\r\n                width: 2\r\n            })\r\n        })\r\n    },\r\n    {\r\n        filename: \"layers/MadRapidsSpot.geojson\",\r\n        style: new Style({\r\n            image: new CircleStyle({\r\n                radius: 10,\r\n                fill: new Fill({\r\n                    color: 'rgba(199, 114, 74, 0.478)'\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: 'rgba(232, 74, 34, 0.839)',\r\n                    width: 2\r\n                })\r\n            })\r\n        })\r\n    }\r\n]\r\n\r\nfunction BaseMap() {\r\n    const [map, setMap] = useState(null); // Store the map instance\r\n\r\n    // Use effect will make sure that the map is continuously rendered every time it changes\r\n    useEffect(() => {\r\n\r\n        // Create a map instance\r\n        const olMap = new Map({\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new OSM()\r\n                })\r\n            ],\r\n            view: new View({\r\n                center: [0, 0],\r\n                zoom: 2\r\n            }),\r\n            controls: [],\r\n            target: 'map',\r\n        });\r\n\r\n        // Store the map and vector source instances\r\n        setMap(olMap);\r\n\r\n        return () => {\r\n            olMap.setTarget(null); // Cleanup on unmount\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        // Return a <div> item with style set so that it covers the entire screen\r\n        <div>\r\n            <div id=\"map\" style={{ width: \"100vw\", height: \"100vh\" }} />\r\n            {map && (<MapLayers map={map} layers={jsonLayers} />)}\r\n            {map && (<BufferedLayer map={map} layer={bufferLayer} zIndex={1} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseMap","// MapComponent.js\n\n// FROM: https://mxd.codes/articles/how-to-create-a-web-map-with-open-layers-and-react \n\nimport React, { useState, useEffect, useRef } from 'react';\nimport BaseMap from './BaseMap'\n\nfunction MapComponent() {\n\n    return (\n        <BaseMap/>\n    );\n}\n\nexport default MapComponent;","import React from 'react'\nimport MapComponent from '../components/MapComponent'\n\nconst Map = () => {\n    return (\n        <div>\n            <MapComponent/>\n        </div>\n    )\n}\n\nexport default Map","\r\nconst mobileScreen = window.matchMedia(\"only screen and (max-device-width: 1024px)\").matches;\r\n\r\nlet pos = 0;\r\nfunction navScroll(e) {\r\n\r\n    let scrollPos = window.scrollY;\r\n\r\n    let icons = document.getElementById(\"icons\")\r\n    let nav = document.getElementById(\"nav\")\r\n    let info = document.getElementById(\"info\")\r\n\r\n    let topPos = 0;\r\n    let underPos = 8;\r\n    let id = null;\r\n\r\n    if (icons != null && scrollPos / window.screen.height < icons.offsetTop / window.screen.height) {\r\n        nav.style.display = 'none'\r\n\r\n        // If using a mobile device, activate animation so icon doesnt get in the way\r\n        if (mobileScreen) {\r\n            id = setInterval(frameUp, 2);\r\n\r\n            function frameUp() {\r\n                if (pos <= topPos) {\r\n                    clearInterval(id);\r\n                } else {\r\n                    pos--;\r\n                    info.style.top = pos + 'vh';\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (icons === null || scrollPos / window.screen.height >= icons.offsetTop / window.screen.height) {\r\n        nav.style.display = 'flex'\r\n\r\n        // If using a mobile device, activate animation so icon doesnt get in the way\r\n        if (mobileScreen) {\r\n\r\n            id = setInterval(frameDown, 2);\r\n\r\n            function frameDown() {\r\n                if (pos >= underPos) {\r\n                    clearInterval(id);\r\n                } else {\r\n                    pos++;\r\n                    info.style.top = pos + 'vh';\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default navScroll","\r\n\r\nfunction iconHover(e) {\r\n\r\n    let info = document.getElementById(\"info\");\r\n    let infoDiv = document.getElementById(\"infoDiv\");\r\n\r\n    let hovering = false;\r\n\r\n    // hovering over icon\r\n    info.addEventListener(\"mouseleave\", function (event) {\r\n        hovering = false;\r\n        info.classList.remove('infoHover')\r\n        infoDiv.style.display = \"none\"\r\n    }, false);\r\n\r\n    info.addEventListener(\"mouseover\", function (event) {\r\n        hovering = true;\r\n        info.classList.add('infoHover')\r\n        infoDiv.style.display = \"block\"\r\n    }, false)\r\n    // hovering over box\r\n    infoDiv.addEventListener(\"mouseleave\", function (event) {\r\n        hovering = false;\r\n        info.classList.remove('infoHover')\r\n        infoDiv.style.display = \"none\"\r\n    }, false);\r\n\r\n    infoDiv.addEventListener(\"mouseover\", function (event) {\r\n        hovering = true;\r\n        info.classList.add('infoHover')\r\n        infoDiv.style.display = \"block\"\r\n    }, false)\r\n\r\n}\r\n\r\nexport default iconHover","import React, { Component } from 'react';\n\nimport { AiTwotoneInfoCircle } from \"react-icons/ai\";\n\nimport { useEffect } from \"react\";\n\nimport MainPage from \"./pages/MainPage\";\nimport Gallery from \"./pages/Gallery\";\nimport NoPage from \"./pages/NoPage\";\nimport Map from './pages/Map';\n\nimport { Route, Routes } from 'react-router-dom';\n\nimport navScroll from \"./scripts/navScroll\";\nimport iconHover from \"./scripts/iconHover\";\n// import game from \"./scripts/game\";\n\nimport { useLocation } from \"react-router-dom\";\n\nimport home from \"./home\";\n\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n\n  const location = useLocation();\n\n  useEffect(() => {\n    navScroll()\n  }, [location])\n\n  useEffect(() => {\n    iconHover()\n  }, [location])\n\n  // useEffect(() => {\n  //   game()\n  // }, [location])\n  \n\n  return (\n    <div>\n\n        <div id=\"nav\">\n          <Nav linksList={home.icons} style={{position: 'fixed', display: 'flex'}}/>\n        </div>\n\n        <div id=\"info\" className=\"infoIcon\">\n          <AiTwotoneInfoCircle size={50}/>\n        </div>\n\n        <div id=\"infoDiv\" className='popupDiv'>\n          <p>This website is built from scratch using the React web framework, JavaScript, HTML, and CSS. All the code is available on my <a href='https://github.com/ga-holmes/ga-holmes.github.io'>github</a>. I'll be putting any interesting things I make or do on here, feel free to explore!</p>\n        </div>\n\n        <Routes>\n\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/*\" element={<NoPage />} />\n          <Route path=\"/gallery\" element={<Gallery/>} />\n          <Route path=\"/map\" element={<Map/>} />\n\n        </Routes>\n\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport navScroll from \"./scripts/navScroll\";\n\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n// fonts\nimport \"typeface-roboto\"\nimport \"typeface-source-sans-pro\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n  document.addEventListener('scroll', navScroll)\n);\n\nnavScroll();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/back1.8c27f790.JPG\";","module.exports = __webpack_public_path__ + \"static/media/back2.47bdf42b.jpg\";"],"sourceRoot":""}